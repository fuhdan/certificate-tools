# =============================================================================
# Certificate Authority Infrastructure Configuration
# =============================================================================
# This file defines the complete CA hierarchy and infrastructure settings
# Modify these values to customize your PKI setup

# =============================================================================
# INFRASTRUCTURE TOPOLOGY
# =============================================================================
# Define your CA hierarchy structure here

# Root CA Configuration
ROOT_CA_NAME="RootCA"
ROOT_CA_CN="DanielF Root Certificate Authority"
ROOT_CA_DESCRIPTION="Primary root CA for the entire PKI infrastructure"

# Intermediate CAs Configuration
# Format: CA_NAME:COMMON_NAME:PARENT_CA:DESCRIPTION
INTERMEDIATE_CAS=(
    "IntermediateCA1:DanielF Intermediate CA 1:RootCA:Primary intermediate CA for 3-tier chain"
    "IntermediateCA2:DanielF Intermediate CA 2:RootCA:Secondary intermediate CA (if needed)"
)

# Issuing CAs Configuration  
# Format: CA_NAME:COMMON_NAME:PARENT_CA:DESCRIPTION
ISSUING_CAS=(
    "IssuingCA1:DanielF Issuing CA 1:IntermediateCA1:Primary issuing CA (3-tier: Root->Intermediate->Issuing)"
    "IssuingCA2:DanielF Issuing CA 2:RootCA:Direct issuing CA (2-tier: Root->Issuing)"
    "IssuingCA3:DanielF Issuing CA 3:IntermediateCA2:Alternative issuing CA (if using second intermediate)"
)

# Enable/Disable specific CAs (set to false to skip creation)
CREATE_ROOT_CA=true
CREATE_INTERMEDIATE_CA1=true
CREATE_INTERMEDIATE_CA2=false        # Disabled by default
CREATE_ISSUING_CA1=true
CREATE_ISSUING_CA2=true
CREATE_ISSUING_CA3=false             # Disabled by default

# =============================================================================
# CRYPTOGRAPHIC PARAMETERS
# =============================================================================

# Key Sizes (in bits)
# Recommended: 3072+ for new deployments, 4096 for high security
ROOT_KEY_SIZE=4096                   # Root CA (highest security)
INTERMEDIATE_KEY_SIZE=3072           # Intermediate CAs
ISSUING_KEY_SIZE=3072               # Issuing CAs

# Certificate Validity Periods (in days)
# Root CA should have longest validity, issuing CAs shortest
ROOT_VALIDITY_DAYS=3650             # 10 years - Root CA
INTERMEDIATE_VALIDITY_DAYS=1825     # 5 years - Intermediate CAs  
ISSUING_VALIDITY_DAYS=825           # 2.25 years - Issuing CAs

# Hash Algorithm
# Options: sha256, sha384, sha512
HASH_ALGORITHM="sha256"

# =============================================================================
# DISTINGUISHED NAME (DN) COMPONENTS
# =============================================================================
# These values will be used in the Subject field of all certificates

DEFAULT_COUNTRY="CH"                 # Country (2-letter code)
DEFAULT_STATE="BE"                   # State/Province
DEFAULT_LOCALITY="Bern"              # City/Locality (optional)
DEFAULT_ORG="DanielF"               # Organization name
DEFAULT_OU="IT Infrastructure"       # Organizational Unit
DEFAULT_EMAIL=""                     # Email (leave empty to exclude)

# =============================================================================
# DIRECTORY STRUCTURE
# =============================================================================

# Base directory for all CA files
BASE_DIR="./CertificateAuthority"

# Subdirectory structure (relative to each CA)
CERTS_DIR="certs"                   # Certificates
PRIVATE_DIR="private"               # Private keys
CRL_DIR="crl"                       # Certificate Revocation Lists
NEWCERTS_DIR="newcerts"             # Newly issued certificates
DATABASE_FILE="index.txt"           # Certificate database
SERIAL_FILE="serial"                # Serial number file
CRL_NUMBER_FILE="crlnumber"         # CRL serial number

# =============================================================================
# CERTIFICATE EXTENSIONS AND POLICIES
# =============================================================================

# Basic Constraints
ROOT_CA_BASIC_CONSTRAINTS="critical, CA:true"
INTERMEDIATE_CA_BASIC_CONSTRAINTS="critical, CA:true, pathlen:1"
ISSUING_CA_BASIC_CONSTRAINTS="critical, CA:true, pathlen:0"

# Key Usage
ROOT_CA_KEY_USAGE="critical, digitalSignature, cRLSign, keyCertSign"
INTERMEDIATE_CA_KEY_USAGE="critical, digitalSignature, cRLSign, keyCertSign"
ISSUING_CA_KEY_USAGE="critical, digitalSignature, cRLSign, keyCertSign"

# Extended Key Usage (for issuing CAs when signing end certificates)
DEFAULT_EXT_KEY_USAGE="serverAuth, clientAuth"

# Certificate Policies (optional - leave empty if not used)
CERTIFICATE_POLICIES=""

# =============================================================================
# OPERATIONAL SETTINGS
# =============================================================================

# Backup existing CAs before recreating
BACKUP_EXISTING_CAS=true

# Validate certificates after creation
VALIDATE_AFTER_CREATION=true

# Run comprehensive tests
RUN_COMPREHENSIVE_TESTS=true

# Serial number starting value
SERIAL_START=1000

# Default certificate validity for end-entity certificates (days)
DEFAULT_CERT_VALIDITY=825

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# File permissions
CA_DIR_PERMISSIONS=755              # CA directory permissions
PRIVATE_DIR_PERMISSIONS=700         # Private key directory permissions
PRIVATE_KEY_PERMISSIONS=400         # Private key file permissions
CERTIFICATE_PERMISSIONS=644         # Certificate file permissions

# Random seed file location (leave empty for default)
RANDFILE=""

# Enable/disable specific security features
USE_SERIAL_RANDOMIZATION=true       # Randomize certificate serial numbers
REQUIRE_EXPLICIT_POLICY=false       # Require explicit certificate policies

# =============================================================================
# CRL (Certificate Revocation List) SETTINGS
# =============================================================================

# Enable CRL generation
GENERATE_CRLS=true

# CRL validity period (days)
CRL_VALIDITY_DAYS=30

# CRL distribution points (URLs where CRLs will be published)
CRL_DISTRIBUTION_POINTS=(
    # "http://crl.danielf.local/rootca.crl"
    # "http://crl.danielf.local/intermediate1.crl"
)

# =============================================================================
# AUTHORITY INFORMATION ACCESS (AIA)
# =============================================================================

# OCSP responder URLs
OCSP_RESPONDER_URLS=(
    # "http://ocsp.danielf.local"
)

# CA issuer URLs (where to download issuing CA certificates)
CA_ISSUER_URLS=(
    # "http://certs.danielf.local/rootca.crt"
    # "http://certs.danielf.local/intermediate1.crt"
)

# =============================================================================
# LOGGING AND OUTPUT
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL="INFO"

# Enable colored output
USE_COLORS=true

# Show progress bars
SHOW_PROGRESS=true

# Create detailed operation logs
DETAILED_LOGGING=true

# =============================================================================
# PLATFORM-SPECIFIC SETTINGS
# =============================================================================

# macOS specific settings
MACOS_USE_SYSTEM_OPENSSL=false      # Use system LibreSSL vs Homebrew OpenSSL

# Linux specific settings  
LINUX_USE_HARDWARE_RNG=false       # Use /dev/hwrng if available

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Custom OpenSSL configuration templates
# Leave empty to use built-in templates
CUSTOM_ROOT_CA_TEMPLATE=""
CUSTOM_INTERMEDIATE_CA_TEMPLATE=""
CUSTOM_ISSUING_CA_TEMPLATE=""

# Additional OpenSSL extensions
CUSTOM_EXTENSIONS_FILE=""

# Pre/post creation hooks (scripts to run before/after CA creation)
PRE_CREATION_HOOK=""
POST_CREATION_HOOK=""

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test certificate parameters
TEST_CERT_CN="test.example.com"
TEST_CERT_SANS=("www.test.example.com" "api.test.example.com" "127.0.0.1")
TEST_CERT_VALIDITY=30

# Validation tests to perform
VALIDATE_CERT_FORMAT=true
VALIDATE_KEY_FORMAT=true
VALIDATE_CERT_CHAIN=true
VALIDATE_EXTENSIONS=true
VALIDATE_SIGNING_CAPABILITY=true

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Simple 2-tier hierarchy (Root -> Issuing)
# Uncomment and modify these lines, comment out the 3-tier config above
#
# INTERMEDIATE_CAS=()  # No intermediate CAs
# ISSUING_CAS=(
#     "IssuingCA1:DanielF Issuing CA:RootCA:Primary issuing CA (2-tier)"
# )
# CREATE_INTERMEDIATE_CA1=false
# CREATE_ISSUING_CA2=false

# Example 2: Multi-purpose PKI with specialized issuing CAs
# ISSUING_CAS=(
#     "WebServerCA:DanielF Web Server CA:IntermediateCA1:For web server certificates"
#     "EmailCA:DanielF Email CA:IntermediateCA1:For S/MIME certificates"  
#     "DeviceCA:DanielF Device CA:RootCA:For IoT device certificates"
# )

# Example 3: Geo-distributed PKI
# INTERMEDIATE_CAS=(
#     "IntermediateCA-EU:DanielF Europe CA:RootCA:European operations"
#     "IntermediateCA-US:DanielF Americas CA:RootCA:American operations"
# )
# ISSUING_CAS=(
#     "IssuingCA-EU-Web:DanielF EU Web CA:IntermediateCA-EU:EU web servers"
#     "IssuingCA-US-Web:DanielF US Web CA:IntermediateCA-US:US web servers"
# )

# =============================================================================
# MIGRATION AND COMPATIBILITY
# =============================================================================

# Import existing CA certificates (if migrating from another PKI)
IMPORT_EXISTING_ROOT=""             # Path to existing root CA certificate
IMPORT_EXISTING_KEY=""              # Path to existing root CA private key

# Compatibility modes
LEGACY_OPENSSL_COMPATIBILITY=false  # Enable compatibility with OpenSSL < 1.1
WINDOWS_COMPATIBILITY=false         # Generate Windows-compatible formats

# =============================================================================
# DOCUMENTATION
# =============================================================================

# Generate documentation
GENERATE_README=true                # Create README with CA information
GENERATE_USAGE_GUIDE=true          # Create usage guide for each CA
GENERATE_CERT_INVENTORY=true       # Create inventory of all certificates

# Include in documentation
DOCUMENT_PRIVATE_KEY_LOCATIONS=false  # Security: don't document private key paths
DOCUMENT_VALIDITY_PERIODS=true     # Include certificate validity information
DOCUMENT_USAGE_EXAMPLES=true       # Include certificate usage examples
